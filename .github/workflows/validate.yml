name: Validate pull request

on:
  workflow_call:
    secrets:
      sfdx_token:
        required: true
    inputs:
      branch_name:
        required: true
        type: string
      from:
        required: true
        type: string
      to:
        required: true
        type: string
      destructive:
        required: false
        type: string
        default: "false"

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Install sf cli"
        run: npm install @salesforce/cli --global

      - name: "Install sfdx-git-delta"
        run: echo y | sf plugins install sfdx-git-delta

      - name: "Authenticate using SFDX_AUTH_URL"
        run: echo ${{ secrets.sfdx_token }} | sf org login sfdx-url -s -a dev -u

        # the validate command is recommended only for production, as it enforces tests
      - name: "Run validation"
        run: |
          if [ `git diff --name-only ${{ inputs.from }} ${{ inputs.to }} force-app/main/default | wc -l` -ne 0 ]; then
            sf sgd source delta --from "${{ inputs.from }}" --to "${{ inputs.to }}" -o "." -i .forceignore --ignore-destructive-file .forceignoreDestructive
            if [[ "${{ inputs.branch_name }}" == "main" ]]; then
              if [ "${{ inputs.destructive }}" == "true" ]; then
                sf project deploy validate -x package/package.xml -l RunLocalTests -w 60 --post-destructive-changes destructiveChanges/destructiveChanges.xml
              elif grep -q "<types>" package/package.xml; then
                sf project deploy validate -x package/package.xml -l RunLocalTests -w 60
              else
                echo "No components found in package.xml - nothing to validate, treating as success"
              fi
            else
              if [ "${{ inputs.destructive }}" == "true" ]; then
                sf project deploy start -x package/package.xml --dry-run -w 60 --post-destructive-changes destructiveChanges/destructiveChanges.xml
              elif grep -q "<types>" package/package.xml; then
                sf project deploy start -x package/package.xml --dry-run -w 60
              else
                echo "No components found in package.xml - nothing to validate, treating as success"
              fi
            fi
          else
            echo "No changes detected in force-app/main/default"
          fi
