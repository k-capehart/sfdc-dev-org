name: Back Propagate - PR

on:
  workflow_call:
    inputs:
      branch_name:
        required: true
        type: string

jobs:
  back-propagate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Set up git config"
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions@github.com"

      - name: "Create new branch"
        run: |
          NEW_BRANCH_NAME=$(echo "gh_actions/${{ github.event.pull_request.head.ref }}__${{ inputs.branch_name }}" | sed 's/ /_/g')
          git fetch --all
          git checkout ${{ inputs.branch_name }}
          git checkout -b $NEW_BRANCH_NAME || git checkout $NEW_BRANCH_NAME
          git merge main --no-edit
          git push -f -u origin $NEW_BRANCH_NAME

      - name: "Create PR"
        run: |
          while IFS=' ' read -r pr_number base_ref head_ref; do
            gh pr close $pr_number --repo k-capehart/sfdc-dev-org --comment "This PR has been automatically closed because a more recent PR has been opened." --delete-branch
          done < <(gh pr list --search "[BACK PR]" --label ${{ inputs.branch_name }} --repo k-capehart/sfdc-dev-org --state open --json number --json headRefName --json baseRefName | jq -r '.[] | "\(.number) \(.baseRefName) \(.headRefName)"')

          TITLE=$(echo "${{ github.event.pull_request.title }}" | sed 's/"/\\"/g')
          BODY=$(echo "${{ github.event.pull_request.body }}" | sed 's/"/\\"/g')
          PR_OUTPUT=$(gh pr create -B ${{ inputs.branch_name }} -H "$NEW_BRANCH_NAME" --title "[BACK PR] $TITLE" --body "$BODY" --label ${{ inputs.branch_name }} 2>&1) || true

          if echo "$PR_OUTPUT" | grep -q "already exists"; then
            echo "Existing PR updated: $PR_OUTPUT"
          elif echo "$PR_OUTPUT" | grep -q "https://github.com/"; then
            echo "Successfully created PR: $PR_OUTPUT"
          else
            echo "Failed to create PR: $PR_OUTPUT"
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
